#!/bin/bash
# Copyright (C) 2015 - Claudio Mignanti
#
# This is free software, licensed under the MIT license.
#

echo owrt-pkgtest - OpenWrt Package tester

_usage() {
cat << EOU

 OpenWrt package compile tester

  usage: $0 [-h] [-a <arch>] [-r <release>] [-d <package_dir_root>] [-b <build_dir>] [-m <mirror_url>] <package_name1> [package_name2] ...

  Options:
    -h: print this help and exit
    -a: set a different architecture (default: ar71xx)
    -r: use a different release (default: barrier_breaker)
    -d: set a the package direcory root (default: `pwd`)
    -b: setup the building dir (default: /tmp/owrt-pkgtest
    -m: setup the baseurl for a different mirror (default: https://downloads.openwrt.org)
EOU
}

#default values
arch=ar71xx
release=barrier_breaker
dir_package=`pwd`/
build_dir=/tmp/owrt-pkgtest
# allow override of base url from a mirror, known available mirrors are:
#  * http://mirror1.mirror.garr.it/mirrors/openwrt/
base_url=https://downloads.openwrt.org/

#parse command line
while getopts "ha:r:d:b:m:" OPTION; do
    case $OPTION in
        a)
            arch=$OPTARG
            ;;
        r)
            release=$OPTARG
            ;;
        d)
            dir_package=$OPTARG
            ;;
        b)
            build_dir=$OPTARG
            ;;
        m)
            base_url=$OPTARG
            ;;
        h|?)
            _usage
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))
test_pkgs=$*

echo $test_pkgs
if [ -z $test_pkgs ]; then
    echo "err: no package name provided. exiting"
    exit 1
fi

_downlod_sdk() {
    #SDKs url
    declare -A sdk_url
    sdk_url[barrier_breaker ar71xx]="barrier_breaker/14.07/ar71xx/generic/OpenWrt-SDK-ar71xx-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2"
    sdk_url[barrier_breaker atheros]="barrier_breaker/14.07/atheros/generic/OpenWrt-SDK-atheros-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2"
    sdk_url[barrier_breaker x86]="barrier_breaker/14.07/x86/generic/OpenWrt-SDK-x86-for-linux-x86_64-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2"

    #Chaos Calmer sdk urls
    sdk_url[chaos_calmer ar71xx]="chaos_calmer/15.05/ar71xx/generic/OpenWrt-SDK-15.05-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2"
    sdk_url[chaos_calmer ath25]="chaos_calmer/15.05/ath25/generic/OpenWrt-SDK-15.05-ath25_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2"
    sdk_url[chaos_calmer x86]="chaos_calmer/15.05/x86/generic/OpenWrt-SDK-15.05-x86-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2"

    if [ ! -d $build_dir/owrt-sdk/ ]; then
        mkdir -p $build_dir/owrt-sdk/
    fi
    # download the sdk and extract it inside build_dir
    if [ ! -f $build_dir/sdk_${release}_${arch}.tar.bz2 ]; then
        dl_url=${base_url}${sdk_url[${release} ${arch}]}
        wget ${dl_url}  -O $build_dir/sdk_${release}_${arch}.tar.bz2
        tar xjf $build_dir/sdk_${release}_${arch}.tar.bz2 -C $build_dir/owrt-sdk/ --strip-components=1
    fi
}

_add_package2test() {
    cp -fr $dir_package $build_dir/owrt-sdk/pkg
    cp $build_dir/owrt-sdk/feeds.conf.default $build_dir/owrt-sdk/feeds.conf
    echo "src-link testing $build_dir/owrt-sdk/pkg" >> $build_dir/owrt-sdk/feeds.conf
    $build_dir/owrt-sdk/scripts/feeds update
    $build_dir/owrt-sdk/scripts/feeds list -r testing
}

_downlod_sdk

_add_package2test

for pkg in $test_pkgs; do
    $build_dir/owrt-sdk/scripts/feeds install -d y $pkg
    make -C $build_dir/owrt-sdk package/$pkg/compile V=s
done

exit $?
